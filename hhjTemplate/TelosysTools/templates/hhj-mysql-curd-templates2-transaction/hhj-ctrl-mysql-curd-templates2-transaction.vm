##-------------------------------------------------------------------------------------------------------- 
#set( $_ = "$" )
##-------------------------------------------------------------------------------------------------------- 
## Key fields = fields in Primary Key
#set( $keyFields = $entity.keyAttributes ) 
##-------------------------------------------------------------------------------------------------------- 
## Data fields = fields not in Primary Key and not in selected Links
#set( $dataFields = $entity.nonKeyAttributes ) 
##-------------------------------------------------------------------------------------------------------- 
## #set( $itemVariable = $fn.uncapitalize($entity.name) ) 
#set( $itemVariable = $fn.uncapitalize($entity.name) )
##--------------------------------------------------------------------------------------------------------
package ${target.javaPackageFromFolder(${SRC})};

import java.util.Map;

import javax.annotation.Resource;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import Session.SessionUtil;
import hhj.service.hhjService;
import hhj.service.${entity.name}.${entity.name}Service;

/**
 * 
 * @author	: hhj
 * @Date	: $today.date("yyyy. MM. dd.")
 * @version	: 1.0
 * @see		: 
 *
 */
@Controller
public class ${entity.name}Controller {
	@Resource(name = "hhjService")
	private hhjService service;

	@Resource(name = "${entity.name}Service")
	private ${entity.name}Service ${itemVariable}Service;

	Logger log = Logger.getLogger(this.getClass());

	@RequestMapping(value = "/${entity.name}/${entity.name}.do")
	public String returnUrl(@RequestParam Map<String, Object> param, Model model) throws Exception {
		log.debug("hhj Ctrl - /${entity.name}/${entity.name}.do");
		
		int cnt = -1;
		String isSuccess = "fail";
		
		String iu = (String) param.get("save_iu");
		param.put("updusr_sn", SessionUtil.getUserSn());
		
		if(iu == null) {
			log.debug("query_id is null");
		} else if(iu.equals("I")) {
			log.debug("hhj - param : = " + param);
			
			try {
				cnt = ${itemVariable}Service.insert(param);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			isSuccess = cnt > -1 ? "succ" : "fail";
			param.put("isSuccess", isSuccess);
		} else if(iu.equals("U")) {
			log.debug("hhj - param : = " + param);
			
			try {
				cnt = ${itemVariable}Service.update(param);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			isSuccess = cnt > 0 ? "succ" : "fail";
			param.put("isSuccess", isSuccess);
		} else if(iu.equals("D")) {
			log.debug("hhj - param : = " + param);
			
			try {
				cnt = ${itemVariable}Service.delete(param);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			isSuccess = cnt > 0 ? "succ" : "fail";
			param.put("isSuccess", isSuccess);
		}
		
		model.addAttribute("parm", param);
		
		return "/${entity.name}/${entity.name}";
	}
}
