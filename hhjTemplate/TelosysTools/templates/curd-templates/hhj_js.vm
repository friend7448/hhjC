##-------------------------------------------------------------------------------------------------------- 
#set( $_ = "$" )
##-------------------------------------------------------------------------------------------------------- 
## Key fields = fields in Primary Key
#set( $keyFields = $entity.keyAttributes ) 
##-------------------------------------------------------------------------------------------------------- 
## Data fields = fields not in Primary Key and not in selected Links
#set( $dataFields = $entity.nonKeyAttributes ) 
##-------------------------------------------------------------------------------------------------------- 
## #set( $itemVariable = $fn.uncapitalize($entity.name) ) 
#set( $itemVariable = $fn.uncapitalize($entity.name) )
##--------------------------------------------------------------------------------------------------------
// search param
var search_set = 
	{
		url : "../common/doSelect.do",
		postData : {
			ACTION : '${entity.databaseTable}.doSelect'
#foreach( $field in $entity.attributes )
#if( !$field.isAutoIncremented())
			,S_$field.databaseName : ''
#end
#end
		},
	};


function setSearchValue() {
#foreach( $field in $entity.attributes )
#if( !$field.isAutoIncremented())
	search_set.postData.S_$field.databaseName = jQuery('#S_$field.databaseName').val();
#end
#end
}

$(document).ready(function() {
	setSearchValue();
	
	jQuery("#tbody").jqGrid({
		styleUI : "Bootstrap",
		datatype : "json",
		url : search_set.url,
		postData : search_set.postData,
		mtype : "POST", 
		colNames : [ 'NO'#foreach( $field in $entity.attributes ),'$field.databaseComment'#end],
		jsonReader : {
			page : 'page',
			total : 'total',
			root : 'rows',
			records : function(obj) {
				return obj.length;
			},
			repeatitems : false,
			cell : '',
			id : 'RNUM'
		},
		colModel : [ {name : 'RNUM',	   	index : 'RNUM',		    width : 0, 		sortable : false,	align : 'center', 	hidden : true}
#foreach( $field in $entity.attributes )
					,{name : '$field.databaseName',		index : '$field.databaseName',		width : 0,	sortable : false,	align : 'center',		hidden : false}  
#end		             
		],
//		pager : '#tbodyPager',
		rowNum : 10,
		rowList:[10,20,30],
		height: 370,
		sortable:true,
//		sortname:'AA',
//		sortorder:"desc",
		gridview: true,
//		caption : 'caption',
//		autowidth : true,
		rownumbers: true,
	    rownumWidth : 40,
		viewrecords : true,
		loadComplete: function(data) {
			initPage("tbody", "paginate", data);
		},
		onSelectRow: function (nId) {
			detail(nId);
		}
	});
	hhj_resizeJqGridWidth('tbody', 'grid_container', $('#grid_container').width());

	btnBind();
	initTableDetail();
});

// button binding
function btnBind()
{
	jQuery("#btn_init").bind("click",doInit);		
	jQuery("#btn_search").bind("click",doSearch);
	jQuery("#btn_insert").bind("click",doInsert);    
	jQuery("#btn_update").bind("click",doUpdate);    
	jQuery("#btn_delete").bind("click",doDelete);    
}

// init
#set ( $cnt = 0 )
function doInit()
{
	initTableDetail();
#foreach( $field in $entity.attributes )
#if( !$field.isAutoIncremented() && $cnt == 0)
	jQuery("#$field.databaseName").focus();
#set ( $cnt = 1 )
#end
#end
}

// init - Detail
function initTableDetail()
{
#foreach( $field in $entity.attributes )
#if( !$field.isAutoIncremented())
	jQuery("#$field.databaseName").val("$field.databaseDefaultValue");
#end
#if($field.isKeyElement())
	jQuery("#$field.databaseName").prop('readonly', false);
#end
#if( $field.databaseName == "UPDT_DT" || $field.databaseName == "UPDUSR_SN")
	jQuery("#$field.databaseName").prop('readonly', true);
#end
#end		
	btnStatus(0,1,1);
}

// doSearch
function doSearch()
{
	setSearchValue();
	
	jQuery("#tbody").clearGridData();		
	jQuery("#tbody").jqGrid('setGridParam', {
		page : 1,
		url : search_set.url,
		postData : search_set.postData,
	}
	).trigger("reloadGrid");
	
	initTableDetail();
}

// list  Detail
function detail(nId)
{
    $.ajax({
        type: "POST",
        url: "../common/doSelectDetail.do",
        data: {
        	ACTION : '${entity.databaseTable}.doSelectDetail'
#foreach( $field in $entity.KeyAttributes )
        	, $field.databaseName : jQuery("#tbody").getCell(nId,'$field.databaseName')
#end
        },
        dataType: 'json',
        error: function(){
            alert('조회중 오류가 발생하였습니다.');
        },
        success: function(jdata){doDetailCallback(jdata);}
    });
}

// list - Detail Callback
function doDetailCallback(jData)
{
	var response = jData.response[0];

	initTableDetail();

#foreach( $field in $entity.attributes )
#if( $field.databaseName == "UPDT_DT")
	jQuery("#$field.databaseName").val(dateToFormat(response.$field.databaseName));
#else
	jQuery("#$field.databaseName").val(response.$field.databaseName);
#end
#if($field.isKeyElement())
	jQuery("#$field.databaseName").prop('readonly', true);
#end 
#end

	btnStatus(1,0,0);
}

#set( $cnt = 0)
// not null check
function IUDcheckValue() {
#foreach( $field in $entity.attributes )
#if($field.isDatabaseNotNull()  && !$field.isAutoIncremented())
#if( $cnt > 0 )
	else if(jQuery("#$field.databaseName").val().length == 0)
#end
#if( $cnt == 0 )
	if(jQuery("#$field.databaseName").val().length == 0)
#set ( $cnt = 1)
#end
	{
		alert("$field.databaseName 를 입력하십시오.");
		jQuery("#$field.databaseName").focus();
		return false;
	}
#end
#end

	return true;
}

// iud ajax
function IUDdoAjax(actionData, url, uid) {
	var frmData = $("#frmDetail").serialize();
	
	var ajax_set =
    {
		data: frmData + actionData,
        url:url,
        return_fn:function(jdata){doIUDCallback(jdata, uid);}
    }

    ajax(ajax_set, uid);
}

// insert
function doInsert()
{
	if(!IUDcheckValue()) return;
	
	var actionData = '&ACTION=${entity.databaseTable}.doInsert';
	var url = '../common/doInsert.do';
	var uid = 'I';
	
	IUDdoAjax(actionData, url, uid);
}

// update
function doUpdate()
{	
	if(!IUDcheckValue()) return;
	
	var actionData = '&ACTION=${entity.databaseTable}.doUpdate';
	var url = '../common/doUpdate.do';
	var uid = 'U';
	
	IUDdoAjax(actionData, url, uid);
}

// delete
function doDelete()
{
	if(!IUDcheckValue()) return;
	
	var actionData = '&ACTION=${entity.databaseTable}.doDelete';
	var url = '../common/doDelete.do';
	var uid = 'D';
	
	IUDdoAjax(actionData, url, uid);
}

// iud callback
function doIUDCallback(jData, iud) {
	var result = jData.isSuccess;
	var msg = "";
	
	if(iud=="I") msg = "등록";
	else if(iud=="U") msg = "수정";
	else if(iud=="D") msg = "삭제";
	
	if (result == "SUCC")
	{
		alert(msg + "되었습니다.");
	
		initTableDetail();
		doSearch();
	}
	else if (result == "FAIL")
	{
		if(iud=="D") alert(msg + "가 실패했습니다.");
		else alert(msg + "이 실패했습니다.");
	}
}